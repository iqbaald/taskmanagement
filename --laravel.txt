--Installation
1. Laravel new gym-app
2. composer require larevel/breeze --dev
3. php artisan breeze:install
4. npm instal && npm run dev
5. php artisan migrate

--Create Model, Migration, Controller
1. php artisan make:controller Member -mcr
2. php artisan make:controller Membership -mcr
3. setup table + use 
a. Member
    $table->id();
    $table->string('name');
    $table->foreignId('membership_id')->constrained()->onDelete('cascade');
    $table->boolean('is_active')->default(true);
    $table->softDeletes();
    $table->timestamps();

b. Membership
    $table->id();
    $table->string('name');
    $table->timestamps();

c. Seeder Memberships
   $this->call([
        MembershipSeeder::class,
   ]);
   
   Membership::insert([
            ['id' => 1, 'name' => 'Bulanan'],
            ['id' => 2, 'name' => 'Tahunan'],
            ['id' => 3, 'name' => 'Mingguan'],
            ['id' => 4, 'name' => 'Harian'],
            ['id' => 5, 'name' => 'Trial 3 Hari'],
   ]);

4. setup model 
a. Member
use SoftDeletes;
protected $fillable = ['name', 'membership_id', 'is_active'];
public function membership()
{
    return $this->belongsTo(Membership::class);
}

b. Membership
public function members()
{
    return $this->hasMany(Member::class);
}

--CRUD Member
1. route
Route::resource('members', MemberController::class);

2. controller create + index + store
a. Index
$members = Member::with('membership')->latest()->get();
return view('members.index', compact('members'));

b. Create 
$memberships = Membership::all();
return view('members.create',compact('memberships'));

c. Store
        $request->validate([
        'name' => 'required|string|max:255',
        'membership_id' => 'required|exists:memberships,id',
        ]);

        Member::create([
            'name' => $request->name,
            'membership_id' => $request->membership_id,
            'is_active' => $request->has('is_active'),
        ]);

        return redirect()->route('members.index')->with('success', 'Member berhasil ditambahkan.');

d. Edit 
$memberships = Membership::all();
return view('members.edit', compact('member', 'memberships'));

e. Update
$request->validate([
        'name' => 'required|string|max:255',
        'membership_id' => 'required|exists:memberships,id',
        'is_active' => 'nullable|boolean',
        ]);

        $member->update([
            'name' => $request->name,
            'membership_id' => $request->membership_id,
            'is_active' => $request->has('is_active'), // checkbox
        ]);

        return redirect()->route('members.index')->with('success', 'Data member berhasil diperbarui.');
  
f. Delete	
$member->delete();
return redirect()->route('members.index')->with('success', 'Member berhasil dihapus.');

3. view create

    <div class="max-w-xl mx-auto mt-8">
        <form action="{{ route('members.store') }}" method="POST" class="space-y-4">
            @csrf

            <div>
                <label for="name" class="block text-sm font-medium">Nama Member</label>
                <input type="text" name="name" id="name" required class="w-full border rounded p-2" />
            </div>

            <div>
                <label for="membership_id" class="block text-sm font-medium">Jenis Membership</label>
                <select name="membership_id" id="membership_id" required class="w-full border rounded p-2">
                    @foreach ($memberships as $membership)
                        <option value="{{ $membership->id }}">{{ $membership->name }}</option>
                    @endforeach
                </select>
            </div>

            <div>
                <label class="inline-flex items-center">
                    <input type="checkbox" name="is_active" value="1" checked class="mr-2">
                    Aktif
                </label>
            </div>

            <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">
                Simpan
            </button>
        </form>
    </div>

4. view Index
    <div class="py-4 px-6">
 	@if(session('success'))
            <div class="bg-green-200 text-green-800 px-4 py-2 rounded mb-4">
                {{ session('success') }}
            </div>
        @endif
        <a href="{{ route('members.create') }}"
           class="mb-4 inline-block rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-600">
            + Tambah Member
        </a>

        <table class="w-full border-collapse border border-gray-300">
            <thead class="bg-gray-100">
                <tr>
                    <th class="border px-4 py-2">Nama</th>
                    <th class="border px-4 py-2">Membership</th>
                    <th class="border px-4 py-2">Status</th>
                    <th class="border px-4 py-2">Aksi</th>
                </tr>
            </thead>
            <tbody>
                @forelse ($members as $member)
                    <tr>
                        <td class="border px-4 py-2">{{ $member->name }}</td>
                        <td class="border px-4 py-2">{{ $member->membership->name ?? '-' }}</td>
                        <td class="border px-4 py-2">
                            @if ($member->is_active)
                                <span class="text-green-600 font-semibold">Aktif</span>
                            @else
                                <span class="text-red-600 font-semibold">Tidak Aktif</span>
                            @endif
                        </td>
                        <td class="border px-4 py-2 space-x-2">
                            <a href="{{ route('members.edit', $member->id) }}"
                               class="text-blue-600 hover:underline">Edit</a>

                            <form action="{{ route('members.destroy', $member->id) }}" method="POST"
                                  onsubmit="return confirm('Yakin ingin hapus?')" class="inline">
                                @csrf
                                @method('DELETE')
                                <button type="submit" class="text-red-600 hover:underline">Hapus</button>
                            </form>
                        </td>
                    </tr>
                @empty
                    <tr>
                        <td colspan="4" class="text-center py-4 text-gray-500">Tidak ada data member</td>
                    </tr>
                @endforelse
            </tbody>
        </table>
    </div>

5. view Edit
@method('PUT')
{{ old('name', $member->name ?? '') }}

{{ (old('membership_id', $member->membership_id ?? '') == $membership->id) ? 'selected' : '' }}

{{ old('is_active', $member->is_active ?? true) ? 'checked' : ''}}


--Export Feature
1. composer require maatwebsite/excel "^3.1"
2. php artisan make:export MembersExport --model=Member
2. export/MemberExport.php
<?php

namespace App\Exports;

use App\Models\Member;
use Maatwebsite\Excel\Concerns\FromCollection;
use Maatwebsite\Excel\Concerns\WithHeadings;
use Maatwebsite\Excel\Concerns\WithMapping;

class MembersExport implements FromCollection, WithHeadings, WithMapping
{
    public function collection()
    {
        return Member::with('membership')->get();
    }

    public function map($member): array
    {
        return [
            $member->id,
            $member->name,
            $member->membership->name ?? '-',
            $member->is_active ? 'Aktif' : 'Tidak Aktif',
        ];
    }

    public function headings(): array
    {
        return [
            'ID',
            'Nama',
            'Membership',
            'Status',
        ];
    }
}

3. buat Route + controller 
Route::get('/export-members', [MemberController::class, 'export'])->name('members.export');

use Maatwebsite\Excel\Facades\Excel;
use App\Exports\MembersExport;

public function export()
{
    return Excel::download(new MembersExport, 'members.xlsx');
}

4. add buton export
<a href="{{ route('members.export') }}" class="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700">
    Export ke Excel
</a>

-- Import Feature
1. create import class
php artisan make:import MembersImport --model=Member

2. edit MembersImport
<?php

namespace App\Imports;

use App\Models\Member;
use App\Models\Membership;
use Illuminate\Support\Collection;
use Maatwebsite\Excel\Concerns\ToCollection;
use Maatwebsite\Excel\Concerns\WithHeadingRow;

class MembersImport implements ToCollection, WithHeadingRow
{
    public function collection(Collection $rows)
    {
        foreach ($rows as $row) {
            $membership = Membership::where('name', $row['membership'])->first();

            Member::create([
                'name' => $row['nama'],
                'membership_id' => $membership?->id,
                'is_active' => strtolower($row['status']) === 'aktif',
            ]);
        }
    }
}


3. add route + controller
    Route::post('/import-members', [MemberController::class, 'import'])->name('members.import');

-------

use App\Imports\MembersImport;

public function import(Request $request)
{
    $request->validate([
        'file' => 'required|file|mimes:xlsx,xls',
    ]);

    Excel::import(new MembersImport, $request->file('file'));

    return back()->with('success', 'Import data member berhasil!');
}

4. add sumit form
<form action="{{ route('members.import') }}" method="POST" enctype="multipart/form-data" class="mb-4">
    @csrf
    <input type="file" name="file" accept=".xlsx,.xls" required>
    <button type="submit" class="ml-2 bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">
        Import Excel
    </button>
</form>